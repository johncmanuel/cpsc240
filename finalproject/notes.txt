Algorithm for 1-digit calculator 4-30-24:

1. Read string input from user containing all operations
2. Store string to use for printing it back
3. Create a variable for storing result of calculator
4. Store three characters at a time in register(s) to process results
5. For each character in string:
    - If len(collectedCharacters) == 3:
        - Process calculations
        - Store result in variable
        - Remove contents of collectedCharacters
        - continue;
    - If character == number, store int(character) in a register or array
    - If character in ["+", "-", "*", "/"]:
        - Store character in register or array
    - Repeat iteration
6. Print result
7. End program    

From the assembly file
; Notes for myself:
; Need to design a 1-digit integer calculator that supports
; the basic arithmetic operations.
; Example input: 3+5*3/5-4
; 
; Since input is a string, will need to loop through each character and check
; if its numerical or an operation

Something to keep in mind when reading expression string:
there is an interesting pattern between indices and type of character it
is (i.e digits or arithmetic operators)


ex. string = 5 + 7 - 2 * 3 / 5

idx:  0 1 2 3 4 5 6 7 8
char: 5 + 7 - 2 * 3 / 5

odd num indices = digits
even num indices = operators